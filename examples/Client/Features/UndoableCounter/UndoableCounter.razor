@page "/undoablecounter"
@using FluxorBlazorWeb.ReduxDevToolsTutorial.Client.Features.UndoableCounter.Store
@using Fluxor.Undo
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<h1>Counter</h1>

<p>Current count: @UndoableCounterState.Value.Present.ClickCount</p>

<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new IncrementCounterAction(1)))>+1</button>
<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new IncrementCounterAction(10)))>+10</button>
<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new UndoAllAction<CounterState>())) disabled="@UndoableCounterState.Value.TimeTravelInfo.HasNoPast">&lt;&lt;</button>
<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new UndoAction<CounterState>())) disabled="@UndoableCounterState.Value.TimeTravelInfo.HasNoPast">&lt;</button>
<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new RedoAction<CounterState>())) disabled="@UndoableCounterState.Value.TimeTravelInfo.HasNoFuture">&gt;</button>
<button class="btn btn-primary" @onclick=@(() => Dispatcher.Dispatch(new RedoAllAction<CounterState>())) disabled="@UndoableCounterState.Value.TimeTravelInfo.HasNoFuture">&gt;&gt;</button>
